{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "#f9f9f9",
  "padding": 5,
  "width": 600,
  "data": [
    {"name": "time_brush_store"},
    {
      "name": "source_0",
      "url": "https://raw.githubusercontent.com/shrutimani/week-10-homework/main/reasons.csv",
      "format": {"type": "csv", "parse": {"year": "date"}, "delimiter": ","}
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "field": "year",
          "type": "timeunit",
          "units": ["year", "month"],
          "as": ["yearmonth_year", "yearmonth_year_end"]
        },
        {
          "type": "aggregate",
          "groupby": ["yearmonth_year"],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "bin",
          "field": "computer",
          "as": ["Count", "Count_end"],
          "signal": "concat_0_bin_extent_0_100_maxbins_10_computer_bins",
          "extent": [0, 100],
          "maxbins": 10
        },
        {
          "field": "year",
          "type": "timeunit",
          "units": ["year", "month"],
          "as": ["yearmonth_year", "yearmonth_year_end"]
        },
        {
          "type": "aggregate",
          "groupby": ["yearmonth_year", "computer"],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {
          "type": "impute",
          "field": "__count",
          "groupby": ["computer"],
          "key": "yearmonth_year",
          "method": "value",
          "value": 0
        },
        {
          "type": "stack",
          "groupby": ["yearmonth_year"],
          "field": "__count",
          "sort": {"field": ["computer"], "order": ["descending"]},
          "as": ["__count_start", "__count_end"],
          "offset": "zero"
        }
      ]
    }
  ],
  "signals": [
    {"name": "concat_0_height", "value": 300},
    {"name": "concat_1_height", "value": 60},
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {
      "name": "time_brush",
      "update": "vlSelectionResolve(\"time_brush_store\", \"union\")"
    }
  ],
  "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "each"},
  "marks": [
    {
      "type": "group",
      "name": "concat_0_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "concat_0_height"}
        }
      },
      "marks": [
        {
          "name": "concat_0_pathgroup",
          "type": "group",
          "from": {
            "facet": {
              "name": "faceted_path_concat_0_main",
              "data": "data_1",
              "groupby": ["computer"]
            }
          },
          "encode": {
            "update": {
              "width": {"field": {"group": "width"}},
              "height": {"field": {"group": "height"}}
            }
          },
          "marks": [
            {
              "name": "concat_0_marks",
              "type": "area",
              "clip": true,
              "style": ["area"],
              "sort": {"field": "datum[\"yearmonth_year\"]"},
              "interactive": false,
              "from": {"data": "faceted_path_concat_0_main"},
              "encode": {
                "update": {
                  "orient": {"value": "vertical"},
                  "fill": {"scale": "color", "field": "computer"},
                  "description": {
                    "signal": "\"year (year-month): \" + (timeFormat(datum[\"yearmonth_year\"], timeUnitSpecifier([\"year\",\"month\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"}))) + \"; Percentage: \" + (format(datum[\"__count\"], \"\")) + \"; computer: \" + (isValid(datum[\"computer\"]) ? datum[\"computer\"] : \"\"+datum[\"computer\"])"
                  },
                  "x": {"scale": "concat_0_x", "field": "yearmonth_year"},
                  "y": {"scale": "concat_0_y", "field": "__count_end"},
                  "y2": {"scale": "concat_0_y", "field": "__count_start"},
                  "defined": {
                    "signal": "isValid(datum[\"yearmonth_year\"]) && isFinite(+datum[\"yearmonth_year\"]) && isValid(datum[\"__count\"]) && isFinite(+datum[\"__count\"])"
                  }
                }
              }
            }
          ]
        }
      ],
      "axes": [
        {
          "scale": "concat_0_y",
          "orient": "left",
          "tickCount": 10,
          "gridScale": "concat_0_x",
          "grid": true,
          "domain": false,
          "labels": false,
          "aria": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_0_x",
          "orient": "bottom",
          "grid": false,
          "tickCount": 5,
          "format": {
            "signal": "timeUnitSpecifier([\"year\",\"month\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"})"
          },
          "labelFlush": true,
          "labelOverlap": true,
          "zindex": 0
        },
        {
          "scale": "concat_0_y",
          "orient": "left",
          "grid": false,
          "title": "Percentage of schools with no computer",
          "tickCount": 10,
          "labelOverlap": true,
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "concat_1_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "concat_1_height"}
        }
      },
      "signals": [
        {
          "name": "time_brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"time_brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"time_brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[time_brush_x[0], clamp(x(unit), 0, width)]"
            },
            {
              "events": {"signal": "time_brush_scale_trigger"},
              "update": "[scale(\"concat_1_x\", time_brush_yearmonth_year[0]), scale(\"concat_1_x\", time_brush_yearmonth_year[1])]"
            },
            {
              "events": [{"source": "view", "type": "dblclick"}],
              "update": "[0, 0]"
            },
            {
              "events": {"signal": "time_brush_translate_delta"},
              "update": "clampRange(panLinear(time_brush_translate_anchor.extent_x, time_brush_translate_delta.x / span(time_brush_translate_anchor.extent_x)), 0, width)"
            },
            {
              "events": {"signal": "time_brush_zoom_delta"},
              "update": "clampRange(zoomLinear(time_brush_x, time_brush_zoom_anchor.x, time_brush_zoom_delta), 0, width)"
            }
          ]
        },
        {
          "name": "time_brush_yearmonth_year",
          "on": [
            {
              "events": {"signal": "time_brush_x"},
              "update": "time_brush_x[0] === time_brush_x[1] ? null : invert(\"concat_1_x\", time_brush_x)"
            }
          ]
        },
        {
          "name": "time_brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [{"scale": "concat_1_x"}],
              "update": "(!isArray(time_brush_yearmonth_year) || (+invert(\"concat_1_x\", time_brush_x)[0] === +time_brush_yearmonth_year[0] && +invert(\"concat_1_x\", time_brush_x)[1] === +time_brush_yearmonth_year[1])) ? time_brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "time_brush_tuple",
          "on": [
            {
              "events": [{"signal": "time_brush_yearmonth_year"}],
              "update": "time_brush_yearmonth_year ? {unit: \"concat_1\", fields: time_brush_tuple_fields, values: [time_brush_yearmonth_year]} : null"
            }
          ]
        },
        {
          "name": "time_brush_tuple_fields",
          "value": [{"field": "yearmonth_year", "channel": "x", "type": "R"}]
        },
        {
          "name": "time_brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "time_brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(time_brush_x)}"
            }
          ]
        },
        {
          "name": "time_brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "time_brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: time_brush_translate_anchor.x - x(unit), y: time_brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "time_brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "time_brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "time_brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "time_brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "time_brush_modify",
          "on": [
            {
              "events": {"signal": "time_brush_tuple"},
              "update": "modify(\"time_brush_store\", time_brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "time_brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "signal": "time_brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "signal": "time_brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "concat_1_marks",
          "type": "area",
          "style": ["area"],
          "sort": {"field": "datum[\"yearmonth_year\"]"},
          "interactive": true,
          "from": {"data": "data_0"},
          "encode": {
            "update": {
              "orient": {"value": "vertical"},
              "fill": {"value": "#ab5787"},
              "description": {
                "signal": "\"year (year-month): \" + (timeFormat(datum[\"yearmonth_year\"], '%Y')) + \"; Count: \" + (format(datum[\"__count\"], \"\"))"
              },
              "x": {"scale": "concat_1_x", "field": "yearmonth_year"},
              "y": {"scale": "concat_1_y", "field": "__count"},
              "y2": {"scale": "concat_1_y", "value": 0},
              "defined": {
                "signal": "isValid(datum[\"yearmonth_year\"]) && isFinite(+datum[\"yearmonth_year\"]) && isValid(datum[\"__count\"]) && isFinite(+datum[\"__count\"])"
              }
            }
          }
        },
        {
          "name": "time_brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "signal": "time_brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "signal": "time_brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"time_brush_store\").length && data(\"time_brush_store\")[0].unit === \"concat_1\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ],
              "stroke": [
                {
                  "test": "time_brush_x[0] !== time_brush_x[1]",
                  "value": "white"
                },
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_1_x",
          "orient": "bottom",
          "gridScale": "concat_1_y",
          "grid": true,
          "tickCount": {"signal": "ceil(width/40)"},
          "domain": false,
          "labels": false,
          "aria": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_1_x",
          "orient": "bottom",
          "grid": false,
          "format": "%Y",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(width/40)"},
          "zindex": 0
        },
        {
          "scale": "concat_1_y",
          "orient": "left",
          "grid": false,
          "title": "Count",
          "tickCount": 3,
          "labelOverlap": true,
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "color",
      "type": "ordinal",
      "domain": {"data": "data_1", "field": "computer", "sort": true},
      "range": [
        "#000000",
        "#7B0B52",
        "#A50E6E",
        "#B90F7B",
        "#DB1392",
        "#FF22AF",
        "#FA62C3",
        "#F488CD",
        "#F1A8D7",
        "#D4B1C7 "
      ],
      "interpolate": "hcl"
    },
    {
      "name": "concat_0_x",
      "type": "time",
      "domain": {"data": "data_1", "field": "yearmonth_year"},
      "domainRaw": {"signal": "time_brush[\"yearmonth_year\"]"},
      "range": [0, {"signal": "width"}]
    },
    {
      "name": "concat_0_y",
      "type": "linear",
      "domain": {"data": "data_1", "fields": ["__count_start", "__count_end"]},
      "range": [{"signal": "concat_0_height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "concat_1_x",
      "type": "time",
      "domain": {"data": "data_0", "field": "yearmonth_year"},
      "range": [0, {"signal": "width"}]
    },
    {
      "name": "concat_1_y",
      "type": "linear",
      "domain": {"data": "data_0", "field": "__count"},
      "range": [{"signal": "concat_1_height"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "legends": [
    {
      "title": "States with no computers",
      "values": [
        "Andaman & Nicobar Islands",
        "Andhra Pradesh",
        "Arunachal Pradesh",
        "Assam",
        "Bihar",
        "Chandigarh",
        "Chhattisgarh",
        "Delhi",
        "Goa",
        "Gujarat"
      ],
      "fill": "color"
    }
  ],
  "config": {
    "path": {"stroke": "#ab5787"},
    "shape": {"stroke": "#ab5787"},
    "symbol": {"fill": "#ab5787", "size": 30},
    "range": {
      "category": [
        "#ab5787",
        "#51b2e5",
        "#703c5c",
        "#168dd9",
        "#d190b6",
        "#00609f",
        "#d365ba",
        "#154866",
        "#666666",
        "#c4c4c4"
      ]
    },
    "axis": {
      "domainColor": "#979797",
      "domainWidth": 0.5,
      "gridWidth": 0.2,
      "labelColor": "#979797",
      "tickColor": "#979797",
      "tickWidth": 0.2,
      "titleColor": "#979797"
    },
    "axisBand": {"grid": false},
    "axisX": {"grid": true, "tickSize": 10},
    "axisY": {"domain": false, "grid": true, "tickSize": 0},
    "legend": {
      "labelFontSize": 11,
      "padding": 1,
      "symbolSize": 30,
      "symbolType": "square"
    },
    "style": {
      "arc": {"fill": "#ab5787"},
      "area": {"fill": "#ab5787"},
      "line": {"stroke": "#ab5787"},
      "rect": {"fill": "#ab5787"}
    }
  }
}